apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ '{{' }} .Values.service.name {{ '}}' }}
  labels:
    chart: "{{ '{{' }} .Chart.Name | trunc 63 {{ '}}' }}"
    chartVersion: "{{ '{{' }} .Chart.Version | trunc 63 {{ '}}' }}"
    visualize: "true"
    app: {{ '{{' }} .Values.service.name {{ '}}' }}
spec:
  replicas: {{ '{{' }} .Values.replicaCount {{ '}}' }}
  selector:
    matchLabels:
      app: {{ '{{' }} .Values.service.name {{ '}}' }}
  template:
    metadata:
      labels:
        app: {{ '{{' }} .Values.service.name {{ '}}' }}
        visualize: "true"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{ '{{' }} .Values.service.name {{ '}}' }}
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: {{ '{{' }} .Chart.Name {{ '}}' }}
        image: "{{ '{{' }} .Values.image.repository {{ '}}' }}:{{ '{{' }} .Chart.Version {{ '}}' }}"
        imagePullPolicy: {{ '{{' }} .Values.image.pullPolicy {{ '}}' }}
        env:
        - name: ENV_VAR_1
          value: {{ '{{' }} .Values.env.ENV_VAR_1 {{ '}}' }}
        - name: ENV_VAR_WITH_VALUE_IN_CONFIG_MAP
          valueFrom:
            configMapKeyRef:
              name: global-config
              key: key.for.configmap.entry
        - name: ENV_VAR_WITH_VALUE_IN_SECRET_MAP
          valueFrom:
            secretKeyRef:
              name: global-secrets
              key: key.for.secret.entry
        ports:
        - containerPort: 8080
        livenessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 10
        readinessProbe:
          httpGet:
            path: "/__gtg"
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 30
        resources:
{{ '{{' }} toYaml .Values.resources | indent 12 {{ '}}' }}

